package view;

import controller.ProjectController;
import controller.TaskController;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import model.Project;
import model.Task;
import util.TaskTableModel;

/**
 *
 * @author vanessadeoliveiramello
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController pc;
    TaskController tc;
    //Modelo do componente visual. Implementação padrão do Java Swing
    DefaultListModel projectsModel;
    // Criar um obj deste model e setar isso pro jTable
    TaskTableModel tasksModel;
    
    public MainScreen() throws Exception {
        initComponents();
        //CHAMAR O METODO QUE EU CRIEI NO FIM
        decorarTabelaTarefas();
        iniciaControllerDados();
        iniciaComponentesDoModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelToolbar = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jLabelSubtitle = new javax.swing.JLabel();
        jPanelProjects = new javax.swing.JPanel();
        jLabelProjectsTitle = new javax.swing.JLabel();
        jLabelProjectsAdd = new javax.swing.JLabel();
        jPanelTasks = new javax.swing.JPanel();
        jLabelTasksTitle = new javax.swing.JLabel();
        jLabelTasksAdd = new javax.swing.JLabel();
        jPanelDasTarefasCarregadas = new javax.swing.JPanel();
        jScrollPaneTasks = new javax.swing.JScrollPane();
        jTableTasks = new javax.swing.JTable();
        jPanelEmptyList = new javax.swing.JPanel();
        jPanelSubPanelEmptyList = new javax.swing.JPanel();
        jLabelEmptyListIcon = new javax.swing.JLabel();
        jLabelEmptyListTitle = new javax.swing.JLabel();
        jLabelEmptyListSubtitle = new javax.swing.JLabel();
        jPanelProjectsList = new javax.swing.JPanel();
        jScrollPanelProjects = new javax.swing.JScrollPane();
        jListProjects = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));

        jPanelToolbar.setBackground(new java.awt.Color(0, 153, 102));
        jPanelToolbar.setForeground(new java.awt.Color(255, 255, 255));
        jPanelToolbar.setMaximumSize(new java.awt.Dimension(767, 767));

        jLabelTitle.setFont(new java.awt.Font("Helvetica", 1, 36)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/tick.png"))); // NOI18N
        jLabelTitle.setText("  Todo App");

        jLabelSubtitle.setForeground(new java.awt.Color(255, 255, 255));
        jLabelSubtitle.setText("Anote tudo, não esqueça de nada.");

        javax.swing.GroupLayout jPanelToolbarLayout = new javax.swing.GroupLayout(jPanelToolbar);
        jPanelToolbar.setLayout(jPanelToolbarLayout);
        jPanelToolbarLayout.setHorizontalGroup(
            jPanelToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelToolbarLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelSubtitle)
                    .addComponent(jLabelTitle))
                .addContainerGap(672, Short.MAX_VALUE))
        );
        jPanelToolbarLayout.setVerticalGroup(
            jPanelToolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelToolbarLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabelTitle)
                .addGap(18, 18, 18)
                .addComponent(jLabelSubtitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelProjects.setBackground(java.awt.Color.white);
        jPanelProjects.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelProjectsTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabelProjectsTitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelProjectsTitle.setText("Projetos");

        jLabelProjectsAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/add.png"))); // NOI18N
        jLabelProjectsAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelProjectsAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelProjectsLayout = new javax.swing.GroupLayout(jPanelProjects);
        jPanelProjects.setLayout(jPanelProjectsLayout);
        jPanelProjectsLayout.setHorizontalGroup(
            jPanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelProjectsTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                .addComponent(jLabelProjectsAdd)
                .addContainerGap())
        );
        jPanelProjectsLayout.setVerticalGroup(
            jPanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelProjectsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelProjectsTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelProjectsAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jPanelTasks.setBackground(java.awt.Color.white);
        jPanelTasks.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelTasksTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabelTasksTitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelTasksTitle.setText("Tarefas");

        jLabelTasksAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/add.png"))); // NOI18N
        jLabelTasksAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelTasksAddMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanelTasksLayout = new javax.swing.GroupLayout(jPanelTasks);
        jPanelTasks.setLayout(jPanelTasksLayout);
        jPanelTasksLayout.setHorizontalGroup(
            jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTasksTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelTasksAdd)
                .addContainerGap())
        );
        jPanelTasksLayout.setVerticalGroup(
            jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTasksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTasksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTasksLayout.createSequentialGroup()
                        .addComponent(jLabelTasksTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelTasksLayout.createSequentialGroup()
                        .addComponent(jLabelTasksAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(66, 66, 66))))
        );

        jPanelDasTarefasCarregadas.setBackground(java.awt.Color.white);
        jPanelDasTarefasCarregadas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTableTasks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Tarefa Concluída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableTasks.setGridColor(new java.awt.Color(204, 204, 204));
        jTableTasks.setRowHeight(50);
        jTableTasks.setSelectionBackground(new java.awt.Color(204, 255, 204));
        jTableTasks.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableTasks.setShowHorizontalLines(true);
        jTableTasks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTasksMouseClicked(evt);
            }
        });
        jScrollPaneTasks.setViewportView(jTableTasks);

        jPanelEmptyList.setBackground(java.awt.Color.white);

        jPanelSubPanelEmptyList.setBackground(java.awt.Color.white);

        jLabelEmptyListIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEmptyListIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons/lists.png"))); // NOI18N

        jLabelEmptyListTitle.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabelEmptyListTitle.setForeground(new java.awt.Color(0, 153, 102));
        jLabelEmptyListTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEmptyListTitle.setText("Nenhuma tarefa por aqui :)");

        jLabelEmptyListSubtitle.setBackground(new java.awt.Color(254, 254, 254));
        jLabelEmptyListSubtitle.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        jLabelEmptyListSubtitle.setForeground(new java.awt.Color(153, 153, 153));
        jLabelEmptyListSubtitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelEmptyListSubtitle.setText("Clique no botão \"+\" para adicionar uma nova tarefa");

        javax.swing.GroupLayout jPanelSubPanelEmptyListLayout = new javax.swing.GroupLayout(jPanelSubPanelEmptyList);
        jPanelSubPanelEmptyList.setLayout(jPanelSubPanelEmptyListLayout);
        jPanelSubPanelEmptyListLayout.setHorizontalGroup(
            jPanelSubPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelEmptyListIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelEmptyListSubtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabelEmptyListTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelSubPanelEmptyListLayout.setVerticalGroup(
            jPanelSubPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSubPanelEmptyListLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabelEmptyListIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelEmptyListTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelEmptyListSubtitle)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelEmptyListLayout = new javax.swing.GroupLayout(jPanelEmptyList);
        jPanelEmptyList.setLayout(jPanelEmptyListLayout);
        jPanelEmptyListLayout.setHorizontalGroup(
            jPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSubPanelEmptyList, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelEmptyListLayout.setVerticalGroup(
            jPanelEmptyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelSubPanelEmptyList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelDasTarefasCarregadasLayout = new javax.swing.GroupLayout(jPanelDasTarefasCarregadas);
        jPanelDasTarefasCarregadas.setLayout(jPanelDasTarefasCarregadasLayout);
        jPanelDasTarefasCarregadasLayout.setHorizontalGroup(
            jPanelDasTarefasCarregadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDasTarefasCarregadasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneTasks)
                .addContainerGap())
            .addGroup(jPanelDasTarefasCarregadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelDasTarefasCarregadasLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelEmptyList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanelDasTarefasCarregadasLayout.setVerticalGroup(
            jPanelDasTarefasCarregadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDasTarefasCarregadasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneTasks)
                .addContainerGap())
            .addGroup(jPanelDasTarefasCarregadasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelDasTarefasCarregadasLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanelEmptyList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanelProjectsList.setBackground(java.awt.Color.white);
        jPanelProjectsList.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jListProjects.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jListProjects.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListProjects.setFixedCellHeight(20);
        jListProjects.setSelectionBackground(new java.awt.Color(0, 153, 102));
        jListProjects.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListProjectsMouseClicked(evt);
            }
        });
        jScrollPanelProjects.setViewportView(jListProjects);

        javax.swing.GroupLayout jPanelProjectsListLayout = new javax.swing.GroupLayout(jPanelProjectsList);
        jPanelProjectsList.setLayout(jPanelProjectsListLayout);
        jPanelProjectsListLayout.setHorizontalGroup(
            jPanelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanelProjects)
                .addContainerGap())
        );
        jPanelProjectsListLayout.setVerticalGroup(
            jPanelProjectsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelProjectsListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPanelProjects)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelToolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelProjects, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTasks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelDasTarefasCarregadas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelToolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelProjects, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelTasks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDasTarefasCarregadas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelProjectsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//CLIQUEI EM EVENTOS E ADICIONEI ISSO
    private void jLabelProjectsAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelProjectsAddMouseClicked
        // Cria uma nova janela do tipo Project Dialog Screen quando clica
        ProjectDialogScreen pds = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        // e deixa essa janela visivel
        pds.setVisible(true);
        //Recarregar sempre que eu adicionar novo projeto para já exibí-lo
        //coloca um ouvinte que avisa qd a janela de projetos for fechada
        pds.addWindowListener(new WindowAdapter(){
            @Override
            //ja é um metodo existente no java.awt.event
            public void windowClosed(WindowEvent e){
                try {
                    //carrega os projetos na ProjectModel
                    loadProjetos();
                } catch (Exception ex) {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }//GEN-LAST:event_jLabelProjectsAddMouseClicked

    private void jLabelTasksAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelTasksAddMouseClicked
        /*o parâmetro rootPaneCheckingEnabled é uma opção disponível na classe 
        JDialog do AWT para controlar o comportamento de modalidade da janela.
        Quando o valor de rootPaneCheckingEnabled é definido como true, indica 
        que a janela ProjectDialogScreen será modal. Isso significa que o usuário
        não poderá interagir com outras janelas da aplicação enquanto essa janela
        estiver aberta.
        */
        TaskDialogScreen tds = new TaskDialogScreen(this, rootPaneCheckingEnabled);
        tds.setProject(null);
        tds.setVisible(true);
        tds.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosed(WindowEvent e){
                try {
                    loadTarefas(10);
                } catch (Exception ex) {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        
        });
    }//GEN-LAST:event_jLabelTasksAddMouseClicked

    // Ativei isso clicando na tabela > Eventos > Mouseclicked
    private void jTableTasksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTasksMouseClicked
        // Baseado numa coordenada x,y, ele encontra um ponto na tabela.
        // Pegar uma linha baseada num ponto, descobre a linha onde ocorreu este clique
        int linhaIndex = jTableTasks.rowAtPoint(evt.getPoint());
        // Pegar uma coluna baseada num ponto
        int colunaIndex = jTableTasks.columnAtPoint(evt.getPoint());
        
        switch (colunaIndex) {
            // Quando o evento de mouse clique ocorrer na coluna 3
            case 3 -> {
                //Busca todas as tarefas no nosso tablemodel e pega a de acordo com a linha
                Task tarefa = tasksModel.getTarefas().get(linhaIndex);
                try {
                    tc.update(tarefa);
                } catch (SQLException ex) {
                    Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            default -> throw new AssertionError();
        }
    }//GEN-LAST:event_jTableTasksMouseClicked

    // Events > MouseCliqued
    private void jListProjectsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProjectsMouseClicked
        // quando clica em algum projeto, tem que carregar as tarefas
        //Retorna o indice do ítem clicado
        int projetoIndex = jListProjects.getSelectedIndex();
        // Buscar no meu model aquele projeto
        // Todos meus projetos carregados, os objetos estao salvos dentro do projectsmodel
        // como é retorno de objeto, tenho que fazer o cast de tipo Obj para tipo projeto
        // pq defaultListModel guarda qq tipo de variavel que vira objeto
        Project projeto = (Project) projectsModel.get(projetoIndex);
        try {
            // Carregar as tarefas de acordo com o projectId
            loadTarefas(projeto.getId());
        } catch (Exception ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jListProjectsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                //ALTEREI DE numbus PRA ISSO
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new MainScreen().setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelEmptyListIcon;
    private javax.swing.JLabel jLabelEmptyListSubtitle;
    private javax.swing.JLabel jLabelEmptyListTitle;
    private javax.swing.JLabel jLabelProjectsAdd;
    private javax.swing.JLabel jLabelProjectsTitle;
    private javax.swing.JLabel jLabelSubtitle;
    private javax.swing.JLabel jLabelTasksAdd;
    private javax.swing.JLabel jLabelTasksTitle;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JList<String> jListProjects;
    private javax.swing.JPanel jPanelDasTarefasCarregadas;
    private javax.swing.JPanel jPanelEmptyList;
    private javax.swing.JPanel jPanelProjects;
    private javax.swing.JPanel jPanelProjectsList;
    private javax.swing.JPanel jPanelSubPanelEmptyList;
    private javax.swing.JPanel jPanelTasks;
    private javax.swing.JPanel jPanelToolbar;
    private javax.swing.JScrollPane jScrollPaneTasks;
    private javax.swing.JScrollPane jScrollPanelProjects;
    private javax.swing.JTable jTableTasks;
    // End of variables declaration//GEN-END:variables
    
    // MINHAS CUSTOMIZACOES
    public final void decorarTabelaTarefas(){
        //customizando header da tabela
        jTableTasks.getTableHeader().setFont(new Font("Helvetica Neue", Font.BOLD, 14));
        jTableTasks.getTableHeader().setBackground(new Color(0,153,102));
        jTableTasks.getTableHeader().setForeground(Color.WHITE);
        //setinha de organizar colunas
        jTableTasks.setAutoCreateRowSorter(rootPaneCheckingEnabled);
    }
    
    public final void iniciaControllerDados(){
        pc = new ProjectController();
        tc = new TaskController();
    }
    
    public final void iniciaComponentesDoModel() throws Exception{
        //cria a lista e carrego o que busquei no banco de dados
        projectsModel = new DefaultListModel<>();
        loadProjetos();
        tasksModel = new TaskTableModel();
        // Agora não vai ser aquela tabelinha que criei em jTableTasks > Properties > Model
        jTableTasks.setModel(tasksModel);
        // Agora precisa carregar pra dentro do tasksModel as minhas tarefinhas puxadas do BD
        // comentei pq pus la embaixo
        //loadTarefas(0);
        //Existe projeto carregado do banco? Se sim, força pra ele esta selecionado assim que abrir a interface
        if(!projectsModel.isEmpty()){
            jListProjects.setSelectedIndex(0);
            int projectIndex = jListProjects.getSelectedIndex();
            //pega projeto de dentro do projectmodel
            Project project = (Project) projectsModel.get(projectIndex);
            // ca
            loadTarefas(project.getId());
        }
            
    }
    //recebe um aorametro se tem tarefas
    private void mostraTarefasJTable(boolean temTarefas){
        //Foram carregadas tarefas? Elas existem? Se sim:
        if(temTarefas){
            // AQUI TODO ESSE IF REMOVE A MENSAGEM DE LISTA VAZIA
            // A mensagem de lista vazia tá visivel pro usuário? Se sim...
            if(jPanelEmptyList.isVisible()){
                // ... eu vou esconder...
                jPanelEmptyList.setVisible(false);
                // ... e remover este componente do conteiner painelzinho 
                jPanelDasTarefasCarregadas.remove(jPanelEmptyList);   
            }
            // Adiciona o scroll panel de tarefas no container
            jPanelDasTarefasCarregadas.add(jScrollPaneTasks);
            // Deixa o scroll visível
            jScrollPaneTasks.setVisible(true);
            // Ajusta ao tamanho do container pai
            jScrollPaneTasks.setSize(jPanelDasTarefasCarregadas.getWidth(),jPanelDasTarefasCarregadas.getHeight());
        }
        // Caso não tenha tarefa, faço o processo contrário
        else{
            // Se o painelzinho de tarefas tá visivel
            if(jScrollPaneTasks.isVisible()){
                // ... eu escondo ele...
                jScrollPaneTasks.setVisible(false);
                // ... removo ele do container...
                jPanelDasTarefasCarregadas.remove(jScrollPaneTasks);
            }
            // ... adiciono o painel com icone de lista vazia no container...
            jPanelDasTarefasCarregadas.add(jPanelEmptyList);
            // ... seto como visivel...
            jPanelEmptyList.setVisible(true);
            // ... e ajusto ao tamanho do container
            jPanelEmptyList.setSize(jPanelDasTarefasCarregadas.getWidth(),jPanelDasTarefasCarregadas.getHeight());
        }
    } 

    public void loadProjetos() throws Exception{
        List<Project> projetos = pc.getAll();
        //limpa a lista após o retorno dos dados
        //limpa o model da classe jList para poder adicionar os projetos capturados no banco
        projectsModel.clear();
        for(int i=0; i<projetos.size(); i++){
            Project projeto = projetos.get(i);
            projectsModel.addElement(projeto);
        }
        // Vincular o projectModel com a jList
        // Se deixa assim:
        //DefaultListModel<Project> projectModel;
        // entao poe assim DefaultListModel projectModel;
        // ae fica ok isso:
        //jListProjects.setModel(projectModel);
        // da erro porque espera uma string mas recebe um tipo Project
        jListProjects.setModel(projectsModel);
    }
    
    public void loadTarefas(int idProject) throws Exception{
        List<Task> tarefas = tc.getAll(idProject);
        tasksModel.setTarefas(tarefas);
        mostraTarefasJTable(!tarefas.isEmpty());
    }
}
